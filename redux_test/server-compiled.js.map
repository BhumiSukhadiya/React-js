{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["//server.js\r\n'use strict';\r\nvar express    = require('express');\r\nvar app        = express();\r\nvar bodyParser = require('body-parser');\r\nvar mongoose   = require('mongoose');\r\nvar Data = require('./model/data');\r\nvar UserData = require('./model/userData');\r\n//and create our instances\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n//Connect to database\r\nmongoose.connect('mongodb://127.0.0.1:27017/mydb');\r\napp.use(function (req, res, next) {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET,HEAD,OPTIONS,POST,PUT,DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers');\r\n//and remove cacheing so we get the most recent comments\r\n    res.setHeader('Cache-Control', 'no-cache');\r\n    next();\r\n});\r\n//multer for image upload\r\nvar multer  = require('multer');\r\nvar filename;\r\nvar storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, '/Users/lcom81_two/react_test1/public/images/')\r\n    },\r\n    filename: function (req, file, cb) {\r\n        filename=Date.now()+'.jpg';\r\n        cb(null, filename );\r\n\r\n    }\r\n});\r\nvar upload = multer({ storage: storage });\r\n\r\n   app.post( '/insertData',upload.single('file'),function(req,res){\r\n        //console.log(req.body);\r\n        var data = new Data();\r\n        \r\n        data.firstName = req.body.firstName;\r\n        data.lastName = req.body.lastName;\r\n        data.age = req.body.age;\r\n        data.profile=filename;\r\n        data.save(function (err) {\r\n            if (err)\r\n                res.send(err);\r\n            res.json({message: 'Author Data successfully added!'});\r\n        });\r\n        //res.send(\"image uploaded\");\r\n    });\r\n    app.get('/getData',function (req, res) {\r\n        //looks at our data Schema\r\n        var id = req.query.id;\r\n        var t = null;\r\n        //console.log(\"id=\"+id);\r\n        if (id) {\r\n            Data.find({_id: id}, function (err, authordata) {\r\n                if (err)\r\n                    res.send(err);\r\n                res.json(authordata)\r\n            });\r\n        } else {\r\n            Data.find({}, function (err, authordata) {\r\n                if (err)\r\n                    res.send(err);\r\n                res.json(authordata)\r\n            });\r\n        }\r\n    });\r\n    //post new data to the database\r\n    \r\n    app.put('/updateData',upload.single('file'),function (req, res) {\r\n        console.log(req.body);\r\n        if(req.body.file == null ){\r\n            Data.findOneAndUpdate({\"_id\": req.query.id}, {\r\n            $set: {\r\n                \"firstName\": req.body.firstName,\r\n                \"lastName\": req.body.lastName,\r\n                \"age\": req.body.age,\r\n                \"profile\": filename\r\n            }\r\n        }, {new: true}, function (err, data) {\r\n            if (err) {\r\n                res.send(err);\r\n            } else {\r\n                res.send(\"Author data updated\");\r\n            }\r\n        })\r\n        }else{\r\n            Data.findOneAndUpdate({\"_id\": req.query.id}, {\r\n            $set: {\r\n                \"firstName\": req.body.firstName,\r\n                \"lastName\": req.body.lastName,\r\n                \"age\": req.body.age\r\n            }\r\n        }, {new: true}, function (err, data) {\r\n            if (err) {\r\n                res.send(err);\r\n            } else {\r\n                res.send(\"Author data updated\");\r\n            }\r\n        })\r\n        }\r\n        \r\n\r\n    });\r\n    app.delete('/deleteData',function (req, res) {\r\n        Data.remove({\"_id\": req.query.id}, function (err, data) {\r\n            if (err) {\r\n                res.send(err);\r\n            } else {\r\n                res.send(\"Author data deleted\");\r\n            }\r\n\r\n\r\n        })\r\n\r\n    });\r\n    app.post('/userRegister',function(req,res){\r\n        console.log(req.body)\r\n        UserData.find({\"EmailId\":req.body.umail},function(err,data){\r\n            if(err){\r\n                res.send(err);\r\n                return;\r\n            }\r\n            if(data.length >0){\r\n                res.send(\"Email Id Exist\");\r\n                return;\r\n            }else{\r\n                var udata=new UserData();\r\n                udata.UserName=req.body.uname;\r\n                udata.EmailId=req.body.umail;\r\n                udata.Password=req.body.upass;\r\n                console.log(udata);\r\n                udata.save(function (err) {\r\n                    if (err)\r\n                        res.send(err);\r\n                    res.send('User registered successfully!');\r\n                });\r\n            }\r\n        })\r\n    });\r\n    app.post('/userLogin',function(req,res){\r\n        console.log(req.body)\r\n        UserData.find({\"EmailId\":req.body.mail,\"Password\":req.body.pass},function(err,data){\r\n            if(err){\r\n                res.send(err);\r\n                return;\r\n            }\r\n            if(data.length >0){\r\n                res.send({check:true});\r\n                \r\n            }else{\r\n                res.send({check:false});\r\n            }\r\n        })\r\n    })\r\nvar port = process.env.API_PORT || 3001;\r\n//starts the server and listens for requests\r\napp.listen(port, function () {\r\n    console.log('api running on port :' + port);\r\n});\r\n"]}